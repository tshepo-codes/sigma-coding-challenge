service: sigma-coding-challenge

frameworkVersion: '3'

plugins:
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'af-south-1'}
  environment:
    USER_STREAMS_TABLE: ${self:custom.USER_STREAMS_TABLE}

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:PutItem
        - dynamodb:GetItem
        - dynamodb:UpdateItem
      Resource:
        - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:custom.USER_STREAMS_TABLE}"
    - Effect: Allow
      Action:
        - dynamodb:Query
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:custom.USER_STREAMS_TABLE}/index/*"



custom:
  USER_STREAMS_TABLE: user-streams-management-${self:provider.stage}

functions:
  createUserStream:
    handler: createUserStream.handler
    name: CreateUserStream
    description: POST /streams/add
    events:
      - http:
          path: /streams/add
          method: post

resources:
  Resources:
    UserStreamsTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: ${self:custom.USER_STREAMS_TABLE}
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        SSESpecification:
          SSEEnabled: true
          SSEType: KMS

